// -*- java -*-

import de.sofd.draw2d.*;
import de.sofd.draw2d.event.*;
import java.util.*;
import java.io.*;




//loading/saving arbitrary serializable java objects

loadObject(filename) {
    //finally is buggy in bsh -- see http://life.neophi.com/danielr/2005/10/beanshell_and_finally.html
    var result = null;
    var ois = new ObjectInputStream(new FileInputStream(filename));
    try {
        result = ois.readObject();
    } finally {
        ois.close();
    }
    return result;
}

saveObject(obj,filename) {
    var oos = new ObjectOutputStream(new FileOutputStream(filename));
    try {
        oos.writeObject(obj);
    } finally {
        oos.close();
    }
}





//unit test utilities

public class AssertionError extends Exception {
    public AssertionError() {
        super();
    }

    public AssertionError(String message) {
        super(message);
    }

    public AssertionError(Throwable cause) {
        super(cause);
    }

    public AssertionError(String message, Throwable cause) {
        super(message, cause);
    }
};

assert(condition) {
    if (!condition) {
        throw new AssertionError();
    }
}


assertEquals(o1,o2) {
    //for some reason equals() does not work with primitive types
    if (o1 instanceof bsh.Primitive) {
        if (!(o2 instanceof bsh.Primitive && o1==o2)) {
            throw new AssertionError("NOT EQUAL: "+o1+", "+o2);
        }
        else {
            return;
        }
    }

    if (!o1.equals(o2)) {
        throw new AssertionError("NOT EQUAL: "+o1+", "+o2);
    }
}

assertIdentical(o1,o2) {
    if (o1!=o2) {
        throw new AssertionError("NOT IDENTICAL: "+o1+", "+o2);
    }
}
